GameCraft AI Scribe - Updated Development Roadmap

Goal: Evolve from the current functional prototype into a robust, user-friendly AI-assisted game development environment, particularly strong for Phaser 3 users.

Phase 1: Core Enhancements & Stability (Nearing Completion)

Focus: Address critical usability gaps, enhance the core debugging experience, and ensure a stable foundation.

Status: Significant progress made, major core features implemented. Focus shifts to bug fixing and remaining Phase 1 items.

Key Features:

‚úÖ Project Saving & Loading (Local): DONE (Assumes implementation based on prompt)

‚úÖ Basic Multi-File Support (game.js, index.html): DONE (Assumes implementation based on prompt)

‚úÖ Phaser Console Log Access: DONE (Assumes implementation based on prompt & new Console panel)

üîÑ UI Polish & Bug Fixing: IN PROGRESS / NEXT FOCUS

üö® PRIORITY BUG: Fix Missing "Run Game" Button: The button to trigger the game preview (likely within the "Preview" tab) needs to be re-implemented/fixed after layout refactoring. This is critical for Phaser mode functionality.

Address other known layout issues, component glitches, or inconsistencies.

Improve loading states and user feedback.

Implement the simple "Launch Application" button (Header) - Lower priority.

‚è≥ Basic Project Export: PENDING

Add "Export Project" button.

Implement ZIP creation (code files + assets).

Phase 2: Feature Deepening & Workflow Improvements

Focus: Build upon the stable core by enhancing the editor, asset management, and AI interaction. This phase becomes the focus after Phase 1 is fully complete and stable.

Key Features: (Priority within Phase 2 can be adjusted)

Editor Enhancements:

Linting (ESLint Integration).

Formatting (Prettier Integration).

AI Conversation History:

Implement session-based history panel.

(Optional: Context sending).

Asset Manager Improvements:

Display image thumbnails.

(Optional: Paired asset handling).

Project Templates:

Define & implement basic templates.

Persistent Settings:

Use localStorage for theme, mode, layout sizes.

Phase 3: Polish, Sharing & Advanced Features

Focus: Refine UX, explore sharing/deployment, add advanced AI capabilities. (Further out)

Key Features:

Advanced Editor Features: (Search/Replace, Phaser Autocompletion).

Cloud Saving & User Accounts: (Significant undertaking).

Simple Project Sharing: (Requires cloud saving).

Contextual AI Prompts: ("Refactor this", "Explain function").

Enhanced Onboarding/Tutorial.

Future Considerations / Phase X: Advanced & Experimental Features

Focus: Explore cutting-edge integrations once the core app is mature.

Key Features:

AI-Assisted Tilemap Editor (Experimental / Long-Term).

Version Control Integration.

Build/Deployment Integration.

Collaboration Features.

Visual Editor Elements.

Integrated Debugger.

Support for Other Engines.

Immediate Next Steps Based on This Roadmap:

FIX THE "RUN GAME" BUTTON: This is the absolute top priority to restore core Phaser mode functionality. Investigate GamePreview.tsx and Index.tsx where the tab layout was implemented to see where the button/trigger was lost or needs to be re-added/re-connected.

Complete Basic Project Export: Once the preview is working again, finishing the export feature rounds out Phase 1 nicely.

General UI Polish/Bug Fixing: Address any other smaller issues identified during recent development.
